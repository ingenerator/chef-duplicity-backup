#!/bin/bash
# Generated by Chef - do not edit this file
# Usage: restore.sh <BackupLocation> <ExtraOptions>
#
# BackupLocation: can be either the fully-qualified duplicity backend path (eg s3+http://mybucket), or an alias eg
# 'mysql', 'files', 'postgresql' to restore from this instance's current backup destination.
#
# ExtraOptions: any additional options to pass to duplicity. For example:
#
#   # Restore just one dump
#   restore.sh mysql --file-to-restore mysql-a_schema.sql.gz
#
#   # Restore from two days ago
#   restore.sh files --time 2D
#
# The restored files will be unpacked to a timestamped directory in your $HOME

# Setup error detection and handling
set -o nounset
set -o errexit
set -o pipefail

function error_handler()
{
    echo "********************************************************"
    echo "* BACKUP FAILED - SEE COMMAND OUTPUTS ABOVE            *"
    echo "********************************************************"
}
trap 'error_handler' ERR

if [ -z "${1-}" ]; then
  echo "Error: specify backup location or alias to restore"
  echo "Usage: restore.sh <BackupLocation> <ExtraOptions>"
  exit 1
fi

# Init variables
RESTORE_TIME=`date +%Y-%m-%d-%H-%M-%S`
RESTORE_TO="$HOME/duplicity-restore/$RESTORE_TIME"
BACKUP_SOURCE=$1
shift
RESTORE_OPTIONS="$@"

case "$BACKUP_SOURCE" in
  'files'*)
    BACKUP_SOURCE="<%=node['duplicity']['file_destination']%>"
    BACKUP_NAME="--name file_backup"
    echo "Restoring file_backup from $BACKUP_SOURCE"
    ;;
  <% if node['duplicity']['backup_mysql'] %>
  'mysql'*)
    BACKUP_SOURCE="<%=node['duplicity']['db_destination']%>"
    BACKUP_NAME="--name mysql_backup"
    echo "Restoring mysql_backup from $BACKUP_SOURCE"
    ;;
  <%end %>
  <% if node['duplicity']['backup_postgresql'] %>
  'postgresql'*)
    BACKUP_SOURCE="<%=node['duplicity']['pg_destination']%>"
    BACKUP_NAME="--name pg_backup"
    echo "Restoring pg_backup from $BACKUP_SOURCE"
    ;;
  <%end %>
  *)
    BACKUP_NAME=""
    echo "Restoring backup from explicit source $BACKUP_SOURCE"
esac


echo "With options: $RESTORE_OPTIONS"

echo "Creating restore path in $RESTORE_TO"
mkdir -p "$RESTORE_TO"
chmod 0700 "$RESTORE_TO"

echo "Loading credentials and environment"
source /etc/duplicity/environment.sh

echo "Running restore"
<%=@commands.duplicity_restore('$BACKUP_NAME', '$RESTORE_OPTIONS', '$BACKUP_SOURCE', '$RESTORE_TO') %>

echo ":):):):):):):):):):):):):):):):):):):):):):):)"
echo "Restore successful, your backup is in $RESTORE_TO"
