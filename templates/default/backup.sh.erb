#!/bin/bash
# Generated by Chef - do not edit this file

# Setup error detection and handling
set -o nounset
set -o errexit
set -o pipefail

function error_handler()
{
    echo "********************************************************"
    echo "* BACKUP FAILED - SEE COMMAND OUTPUTS ABOVE            *"
    echo "********************************************************"
}
trap 'error_handler' ERR

echo "Loading credentials and environment"
source /etc/duplicity/environment.sh

<% if node['duplicity']['backup_mysql'] %>
echo "Creating mysql database dump"

# Create temp dir that only we can see
MYSQLTMPDIR="$(mktemp -d)"

DBS="$(mysql --defaults-file=/etc/duplicity/mysql.cnf -h localhost -Bse 'show databases')"
FOUND_DBS=""
for db in $DBS
do
  if [ "$db" != "information_schema" ]; then
    echo " * Dumping mySQL database $db"
    FOUND_DBS="$FOUND_DBS, $db"

    if [ "$db" == "mysql" ]; then
      SCHEMA_BACKUP_FLAGS="--events"
    else
      SCHEMA_BACKUP_FLAGS=""
    fi

    <%=@commands.mysqldump('$db', '$MYSQLTMPDIR/mysql-$db.sql.gz') %>
  fi
done
if [ -z "$FOUND_DBS" ]; then
  echo "No databases found for backup. This probably means your database user has incorrect permissions"
  echo "If you do not want to backup the database, configure node['duplicity']['backup_mysql'] to false"
  exit 9
fi

echo "Backing up mysql database dump"
<%=@commands.duplicity_backup_dir('$MYSQLTMPDIR', 'mysql_backup') %>

rm -rf "$MYSQLTMPDIR"

echo "Cleaning old mysql full database backups"
<%=@commands.duplicity_remove_all_but_n_full('mysql_backup') %>

<% end %>

<% if node['duplicity']['backup_postgresql'] %>
### PostgreSQL backup ###

echo "Creating postgresql database dump"

# Create temp dir that only we can see
POSTGRESTMPDIR="$(mktemp -d)"

<%=@commands.pg_dumpall('$POSTGRESTMPDIR/pgdump.sql.gz') %>

echo "Backing up postgresql database dump"
<%=@commands.duplicity_backup_dir('$POSTGRESTMPDIR', 'pg_backup') %>

rm -rf "$POSTGRESTMPDIR"

echo "Cleaning old postgresql full database backups"
<%=@commands.duplicity_remove_all_but_n_full('pg_backup') %>

<% end %>

### File backup ###
echo "Backing up files"
<%=@commands.duplicity_backup_filelist %>

### Old backup cleanup ###
echo "Cleaning old full backups"
<%=@commands.duplicity_remove_all_but_n_full('file_backup') %>

echo ":):):):):):):):):):):):):):):):):):):):):):):)"
echo "Backup Successful"
echo ":):):):):):):):):):):):):):):):):):):):):):):)"
