#!/bin/bash
# Generated by Chef - do not edit this file

# Setup error detection and handling
set -o nounset
set -o errexit
set -o pipefail

function error_handler()
{
    echo "********************************************************"
    echo "* BACKUP FAILED - SEE COMMAND OUTPUTS ABOVE            *"
    echo "********************************************************"
}
trap 'error_handler' ERR

echo "Loading credentials and environment"
source /etc/duplicity/environment.sh

<% if node['duplicity']['backup_mysql'] %>
echo "Creating mysql database dump"

# Create temp dir that only we can see
MYSQLTMPDIR="$(mktemp -d)"

DBS="$(mysql --defaults-file=/etc/duplicity/mysql.cnf -h localhost -Bse 'show databases')"
FOUND_DBS=""
for db in $DBS
do
  if [ "$db" != "information_schema" ]; then
    echo " * Dumping mySQL database $db"
    FOUND_DBS="$FOUND_DBS, $db"
    mysqldump --defaults-file=/etc/duplicity/mysql.cnf \
              --events \
              -h localhost \
              <%=node['duplicity']['mysql']['innodb_only'] ? '--single-transaction' : '' %> \
              "$db" | gzip -9 > "$MYSQLTMPDIR/mysql-$db.sql.gz"
  fi
done
if [ -z "$FOUND_DBS" ]; then
  echo "No databases found for backup. This probably means your database user has incorrect permissions"
  echo "If you do not want to backup the database, configure node['duplicity']['backup_mysql'] to false"
  exit 9
fi

echo "Backing up mysql database dump"
/usr/local/bin/duplicity --full-if-older-than <%=node['duplicity']['full_if_older_than'] %> \
          --s3-use-new-style \
          <%=node['duplicity']['s3-european-buckets'] ? '--s3-european-buckets' : '' %> \
          --name mysql_backup \
          --allow-source-mismatch \
          "$MYSQLTMPDIR" \
          "<%=node['duplicity']['db_destination'] %>"

rm -rf "$MYSQLTMPDIR"

echo "Cleaning old mysql full database backups"
/usr/local/bin/duplicity remove-all-but-n-full <%=node['duplicity']['keep_n_full'] %> \
          --force \
          --s3-use-new-style \
          <%=node['duplicity']['s3-european-buckets'] ? '--s3-european-buckets' : '' %> \
          "<%=node['duplicity']['db_destination'] %>"

<% end %>

### PostgreSQL backup ###

<% if node['duplicity']['backup_postgresql'] %>
echo "Creating postgresql database dump"

# Create temp dir that only we can see
POSTGRESTMPDIR="$(mktemp -d)"

PGPASSFILE="/etc/duplicity/.pgpass" pg_dumpall -h<%=node['duplicity']['postgresql']['host'] %> -U<%=node['duplicity']['postgresql']['user'] %> | gzip -9 > "$POSTGRESTMPDIR/pgdump.sql.gz"

echo "Backing up postgresql database dump"
/usr/local/bin/duplicity --full-if-older-than <%=node['duplicity']['full_if_older_than'] %> \
          --s3-use-new-style \
          <%=node['duplicity']['s3-european-buckets'] ? '--s3-european-buckets' : '' %> \
          --name pg_backup \
          --allow-source-mismatch \
          "$POSTGRESTMPDIR" \
          "<%=node['duplicity']['pg_destination'] %>"

rm -rf "$POSTGRESTMPDIR"

echo "Cleaning old postgresql full database backups"
/usr/local/bin/duplicity remove-all-but-n-full <%=node['duplicity']['keep_n_full'] %> \
          --force \
          --s3-use-new-style \
          <%=node['duplicity']['s3-european-buckets'] ? '--s3-european-buckets' : '' %> \
          "<%=node['duplicity']['pg_destination'] %>"

<% end %>

### File backup ###
echo "Backing up files"
/usr/local/bin/duplicity --full-if-older-than <%=node['duplicity']['full_if_older_than'] %> \
          --s3-use-new-style \
          <%=node['duplicity']['s3-european-buckets'] ? '--s3-european-buckets' : '' %> \
          --name file_backup \
          --include-filelist /etc/duplicity/globbing_file_list \
          --exclude '**' \
          / \
          "<%=node['duplicity']['file_destination'] %>"


### Old backup cleanup ###
echo "Cleaning old full backups"
/usr/local/bin/duplicity remove-all-but-n-full <%=node['duplicity']['keep_n_full'] %> \
          --force \
          --s3-use-new-style \
          <%=node['duplicity']['s3-european-buckets'] ? '--s3-european-buckets' : '' %> \
          "<%=node['duplicity']['file_destination'] %>"

echo ":):):):):):):):):):):):):):):):):):):):):):):)"
echo "Backup Successful"
echo ":):):):):):):):):):):):):):):):):):):):):):):)"